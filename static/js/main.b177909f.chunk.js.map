{"version":3,"sources":["apis/SDK.js","apis/IconexConnect.js","components/CurrentBlockViewer.js","constants.js","components/ButtonComponent.js","components/InputComponent.js","components/MainSection.js","components/App.js","serviceWorker.js","index.js"],"names":["provider","HttpProvider","window","PROVIDER_URL","iconService","IconService","CallBuilder","IconBuilder","CallTransactionBuilder","SDK","callBuild","_ref","arguments","length","undefined","from","methodName","to","_ref$params","params","method","build","sendTxBuild","_ref2","_ref2$params","_ref2$networkId","networkId","NID","_ref2$stepLimit","stepLimit","_ref2$value","value","jsonrpc","nid","timestamp","concat","Date","getTime","toString","version","id","IconexConnect","getAddress","Promise","resolve","addEventListener","eventHandler","event","_event$detail","detail","type","payload","removeEventListener","dispatchEvent","CustomEvent","sendTransaction","_event$detail2","result","MyPaper","styled","Paper","padding","textAlign","justifyContent","flexWrap","position","top","background","MyBreadcrumbs","Breadcrumbs","margin","fontSize","marginTop","marginBottom","labelStyle","fontWeight","color","CurrentBlockViewer","blockHeightView","this","props","curBlockHeight","react_default","a","createElement","elevation","style","className","aria-label","Link","href","Component","constants","MODE","LOG_OUT","LOG_IN","BDAY_SET","LABEL","label","useStyles","makeStyles","theme","button","spacing","paddingTop","paddingBottom","paddingLeft","paddingRight","input","display","ButtonComponent","mode","buttonClick","classes","variant","CONST","Button","onClick","MyTextField","TextField","marginLeft","marginRight","InputComponent","_this$props","inputData","setInputData","select","placeholder","onChange","SelectProps","native","MenuProps","width","helperText","map","option","key","BDay","MainSection","myData","diff","console","log","prefix","Fragment","Number","Math","abs","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","name","setState","objectSpread","state","defineProperty","target","asyncToGenerator","regenerator_default","mark","_callee","enqueueSnackbar","myAddress","wrap","_context","prev","next","sent","CONTRACT_ADDRESS","execute","slice","stop","_callee2","_this$state","txObj","tx","_context2","_lable_height","t0","blockTimer","setInterval","_callee3","_ref4","_context3","getLastBlock","height","_this2","clearInterval","CurrentBlockViewer_CurrentBlockViewer","components_MainSection","minHeight","InputComponent_InputComponent","assign","components_ButtonComponent","withSnackbar","Boolean","location","hostname","match","createMuiTheme","palette","primary","main","ReactDOM","render","ThemeProvider","maxSnack","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b177909f.chunk.js","sourcesContent":["import IconService, {\n  HttpProvider,\n  IconBuilder,\n} from 'icon-sdk-js'\nimport config from '../config'\n\nconst provider = new HttpProvider(window.PROVIDER_URL)\nconst iconService = new IconService(provider)\n\nconst {\n  CallBuilder,\n  CallTransactionBuilder,\n} = IconBuilder;\n\nconst callBuild = ({\n  from,\n  methodName,\n  to,\n  params = {},\n} = {}) => {\n  const callBuilder = new CallBuilder();\n  const obj = callBuilder\n    .from(from)\n    .to(to)\n    .method(methodName)\n    .params(params)\n    .build();\n  return obj;\n};\n\nconst sendTxBuild = ({\n  from,\n  to,\n  methodName,\n  params = {},\n  networkId = window.NID,\n  stepLimit = '0x493e0',\n  value = '0x0',\n} = {}) => {\n  const callTransactionBuilder = new CallTransactionBuilder();\n  const obj = callTransactionBuilder\n    .nid(networkId)\n    .from(from)\n    .to(to)\n    .stepLimit(stepLimit)\n    .value(value)\n    .timestamp(`0x${((new Date()).getTime() * 1000).toString(16)}`)\n    .method(methodName)\n    .params(params)\n    .version('0x3')\n    .build();\n\n  return {\n    jsonrpc: '2.0',\n    method: 'icx_sendTransaction',\n    params: obj,\n    id: 1,\n  };\n};\n\nexport default {\n  iconService,\n  callBuild,\n  sendTxBuild,\n}","const getAddress = () => new Promise((resolve) => {\n    const eventHandler = (event) => {\n      const { type, payload } = event.detail;\n      if (type === 'RESPONSE_ADDRESS') {\n        resolve(payload);\n      }\n      window.removeEventListener('ICONEX_RELAY_RESPONSE', eventHandler);\n    };\n    window.addEventListener('ICONEX_RELAY_RESPONSE', eventHandler);\n    window.dispatchEvent(new CustomEvent('ICONEX_RELAY_REQUEST', {\n      detail: {\n        type: 'REQUEST_ADDRESS',\n      },\n    }));\n  });\n  \n  \n  const sendTransaction = params => new Promise((resolve) => {\n    const eventHandler = (event) => {\n      const { type, payload } = event.detail;\n      if (type === 'RESPONSE_JSON-RPC') {\n        resolve(payload.result);\n      }\n      window.removeEventListener('ICONEX_RELAY_RESPONSE', eventHandler);\n    };\n    window.addEventListener('ICONEX_RELAY_RESPONSE', eventHandler);\n    window.dispatchEvent(new CustomEvent('ICONEX_RELAY_REQUEST', {\n      detail: {\n        type: 'REQUEST_JSON-RPC',\n        payload: params,\n      },\n    }));\n  });\n  \n  export default {\n    getAddress,\n    sendTransaction,\n  };","import React, { Component } from 'react'\nimport Paper from '@material-ui/core/Paper';\nimport Link from '@material-ui/core/Link'; \nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport { styled } from '@material-ui/styles';\n\nconst MyPaper = styled(Paper)({\n  padding: '0 16px 0 16px',\n  textAlign: 'center',\n  justifyContent: 'center',\n  flexWrap: 'wrap',\n  position: 'fixed',\n  top: -8,\n  background: 'rgba(243, 243, 243, 0.93)',\n});\n\nconst MyBreadcrumbs = styled(Breadcrumbs)({\n  margin: 8,\n  fontSize: 28,\n  marginTop: -8,\n  marginBottom: 3,\n});\n\nconst labelStyle = {\n  fontSize: 10,\n  fontWeight: 500,\n  color: '#555'\n}\n\nexport default class CurrentBlockViewer extends Component {\n  render() {\n    const { curBlockHeight } = this.props\n    const blockHeightView = curBlockHeight || '··········'\n    return (\n      <MyPaper elevation={0}>\n        <label style={labelStyle}>Current Block</label>\n        <MyBreadcrumbs className='lato-100' aria-label=\"Breadcrumb\">\n          <Link color=\"inherit\" href=\"#\">{blockHeightView}</Link>\n        </MyBreadcrumbs>\n      </MyPaper>\n    )\n  }\n}\n","export default {\n    'MODE': {\n        'LOG_OUT': 'LOG_OUT',\n        'LOG_IN': 'LOG_IN',\n        'BDAY_SET': 'BDAY_SET', \n    },\n    'LABEL': [\n        {\n            value: '00',\n            label: '시험',\n        },\n        {\n            value: '01',\n            label: '고백',\n        },\n        {\n            value: '02',\n            label: '생일',\n        },\n        {\n            value: '03',\n            label: '졸업',\n        },\n        {\n            value: '04',\n            label: '입학',\n        },\n        {\n            value: '05',\n            label: '방학',\n        },\n        {\n            value: '06',\n            label: '제대',\n        },\n        {\n            value: '07',\n            label: '우리아기 출산',\n        },\n        {\n            value: '08',\n            label: '어머니 생신',\n        },\n        {\n            value: '09',\n            label: '아버지 생신',\n        },\n        {\n            value: '10',\n            label: '남친 생일',\n        },\n        {\n            value: '11',\n            label: '여친 생일',\n        },\n        {\n            value: '12',\n            label: '이별...',\n        },\n        {\n            value: '13',\n            label: '현피',\n        },\n        {\n            value: '14',\n            label: '퇴사',\n        },\n        {\n            value: '15',\n            label: '이직',\n        },\n        {\n            value: '16',\n            label: '여행',\n        },\n        {\n            value: '17',\n            label: '상견례',\n        },\n        {\n            value: '18',\n            label: '결혼식',\n        },\n        {\n            value: '19',\n            label: '상사 장례식',\n        },\n        {\n            value: '20',\n            label: '로또 당첨',\n        },\n        {\n            value: '21',\n            label: '인생 하직',\n        },\n    ]\n}","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CONST from '../constants'\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1),\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n    paddingLeft: theme.spacing(5),\n    paddingRight: theme.spacing(5),\n  },\n  input: {\n    display: 'none',\n  },\n}));\n\nfunction ButtonComponent({ mode, buttonClick }) {\n  const classes = useStyles();\n  let label = '', variant = 'outlined'\n  switch(mode) {\n    case CONST.MODE['LOG_OUT']: \n      label = 'ICONex 연동하기'\n      break\n    case CONST.MODE['LOG_IN']:\n      variant = 'contained'\n      label = 'B-Day 설정하기'\n      break\n    case CONST.MODE['BDAY_SET']: \n      label = 'B-day 재설정하기'\n      break\n    default:\n      break;\n      \n  }\n  return <Button onClick={buttonClick} variant={variant} color=\"primary\" className={classes.button}>{label}</Button>\n}\n\nexport default ButtonComponent;\n","import React, { Component } from 'react'\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { styled } from '@material-ui/styles';\nimport CONST from '../constants'\n\nconst MyTextField = styled(TextField)({\n  marginLeft: 8,\n  marginRight: 8,\n});\n\nexport default class InputComponent extends Component {\n  render() {\n    const { inputData, setInputData, curBlockHeight } = this.props\n\n    return (\n      <div style={{\n        display: 'flex',\n        flexWrap: 'wrap',\n      }}>\n        <MyTextField\n          select\n          label=\"B-Day\"\n          placeholder=\"\"\n          value={inputData.label}\n          onChange={setInputData('label')}\n          SelectProps={{\n            native: true,\n            MenuProps: {\n              style: {\n                width: 200\n              },\n            },\n          }}\n          helperText=\"어떤 날인가요?\"\n          margin=\"normal\"\n          variant=\"outlined\"\n        >\n          {CONST.LABEL.map(option => (\n            <option key={option.value} value={option.value}>\n              {option.label}\n            </option>\n          ))}\n        </MyTextField>\n        <MyTextField\n          label=\"Block Height\"\n          placeholder={curBlockHeight}\n          value={inputData.BDay}\n          onChange={setInputData('BDay')}\n          helperText=\"블록 값을 입력해주세요.\"\n          margin=\"normal\"\n          variant=\"outlined\"\n        />\n      </div>\n    )\n  }\n}","import React from 'react'\nimport CONST from '../constants'\n\nconst MainSection = ({ mode, myData, curBlockHeight }) => {\n    const diff = myData.BDay - curBlockHeight\n    console.log(diff)\n    const prefix = diff > 0 ? '-' : '+'\n    return mode !== CONST.MODE['BDAY_SET']\n      ? (\n        <>\n          <p className=\"logo lato-100\">B<b>-</b>DAY</p>\n          <p className=\"desc lato-100\">How many blocks until your red-letter day?</p>\n        </>\n      )\n      : (\n        <>\n          <p className=\"logo small\">{CONST.LABEL[Number(myData.label)].label}<span className=\"lato-100\"> 까지</span></p>\n          <p className=\"bday lato-100\">B{prefix}{Math.abs(diff)}</p>\n          <em className=\"div\">-</em>\n        </>\n      )\n  }\n\nexport default MainSection\n","import React, { Component } from 'react'\nimport SDK from '../apis/SDK';\nimport { withSnackbar } from 'notistack';\nimport IconexConnect from '../apis/IconexConnect';\nimport CurrentBlockViewer from './CurrentBlockViewer';\nimport ButtonComponent from './ButtonComponent';\nimport InputComponent from './InputComponent';\nimport MainSection from './MainSection';\nimport CONST from '../constants';\nimport '../styles/animation.scss';\nimport config from '../config';\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.blockTimer = null\n    this.state = {\n      mode: CONST.MODE['LOG_OUT'],\n      myAddress: '',\n      myData: { label: '', BDay: '' },\n      inputData: { label: '00', BDay: '0' },\n      curBlockHeight: 0,\n    }\n  }\n\n  async componentDidMount() {\n    /* 블록 2초 간격 조회 */\n    this.blockTimer = setInterval(async () => {\n      const { height: curBlockHeight } = await SDK.iconService.getLastBlock().execute();\n      this.setState({\n        curBlockHeight\n      })\n    }, 2000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.blockTimer)\n  }\n\n  setInputData = name => event => {\n    this.setState({\n      inputData: {\n        ...this.state.inputData,\n        [name]: event.target.value\n      }\n    })\n  };\n\n  buttonClick = () => {\n    const { mode } = this.state\n    switch(mode) {\n      case CONST.MODE['LOG_OUT']: \n        this.getAddress()\n        break\n      case CONST.MODE['LOG_IN']:\n      case CONST.MODE['BDAY_SET']: \n        this.sendTransaction()\n        break\n      default:\n        break;\n    }\n  }\n\n  getAddress = async () => {\n    const { iconService, callBuild } = SDK\n    const { enqueueSnackbar } = this.props\n    const myAddress = await IconexConnect.getAddress()\n    const myData = await iconService.call(\n      callBuild({\n        from: myAddress,\n        methodName: 'getBDay',\n        params: {},\n        to: window.CONTRACT_ADDRESS,\n      })\n    ).execute()\n\n    this.setState({\n      mode: !!myData ? CONST.MODE['BDAY_SET'] : CONST.MODE['LOG_IN'],\n      myAddress,\n      myData: !!myData ? { label: myData.slice(0, 2), BDay: myData.slice(2) } : {}\n    })\n\n    enqueueSnackbar(`Hello, ${myAddress}.`, { \n      variant: 'success' \n    })\n  }\n\n  sendTransaction = async () => {\n    const { iconService, sendTxBuild } = SDK\n    const { inputData, myAddress } = this.state\n    const { enqueueSnackbar } = this.props\n    try {\n      const { label, BDay } = inputData\n      const txObj = sendTxBuild({\n        from: myAddress,\n        to: window.CONTRACT_ADDRESS,\n        methodName: 'setBDay',\n        params: {\n          _lable_height: `${label}${BDay}`\n        },\n      })\n      const tx = await IconexConnect.sendTransaction(txObj)\n      console.log(tx)\n  \n      this.setState({\n        mode: CONST.MODE['BDAY_SET'],\n        myData: { label, BDay } \n      })\n  \n      enqueueSnackbar(`Congratulations, Your B-Day is set!`, { \n        variant: 'success' \n      })\n\n    } catch (e) {\n      enqueueSnackbar(`Failed for some reason!`, { \n        variant: 'error' \n      })\n    }\n    \n  }\n\n\n  render() {\n    console.log(this.state.inputData)\n    const { mode } = this.state\n    return (\n      <div className=\"App\">\n        <section className=\"main\">\n          <CurrentBlockViewer {...this.state} />\n          <MainSection {...this.state} />\n          <div style={{ minHeight: 100 }}>\n            { mode !== CONST.MODE['LOG_OUT'] && (<InputComponent {...this.state} setInputData={this.setInputData} />)}\n          </div> \n          <ButtonComponent {...this.state} buttonClick={this.buttonClick} />\n        </section>\n      </div>\n    )\n  }\n}\n\nexport default withSnackbar(App)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { SnackbarProvider } from 'notistack';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#f9f9f9',\n    }\n  },\n});\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <SnackbarProvider maxSnack={3}>\n      <App />\n    </SnackbarProvider>\n  </ThemeProvider>, \ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}